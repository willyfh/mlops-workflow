services:
  postgres:
    platform: linux/amd64
    image: postgres:16.2
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TZ=${TIMEZONE}
      - PGTZ=${TIMEZONE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  minio:
    platform: linux/amd64
    image: minio/minio:RELEASE.2024-05-01T01-11-10Z.fips
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_STORAGE_USE_HTTPS=false
      - TZ=${TIMEZONE}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  minio-setup:
    platform: linux/amd64
    image: minio/mc:RELEASE.2024-04-29T09-56-05Z.fips
    depends_on:
      - minio
    volumes:
      - ./minio/create-bucket.sh:/create-bucket.sh
    entrypoint: /bin/sh
    command: -c "chmod +x /create-bucket.sh && /create-bucket.sh"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - TZ=${TIMEZONE}

  mlflow:
    build:
      context: ./mlflow
      dockerfile: Dockerfile
    image: mlflow_server
    container_name: mlflow_server
    restart: always
    ports:
      - "5000:5000"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
      - MLFLOW_S3_IGNORE_TLS=${MLFLOW_S3_IGNORE_TLS}
      - MLFLOW_ENABLE_SYSTEM_METRICS_LOGGING=${MLFLOW_ENABLE_SYSTEM_METRICS_LOGGING}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - MLFLOW_ARTIFACTS_DESTINATION=s3://mlflow
      - MLFLOW_ENABLE_ASYNC_LOGGING=${MLFLOW_ENABLE_ASYNC_LOGGING}
      - TZ=${TIMEZONE}
    depends_on:
      - postgres
      - minio-setup

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend
    container_name: backend
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - mlflow
    environment:
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES}
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - TZ=${TIMEZONE}
    runtime: ${NVIDIA_RUNTIME}

volumes:
  postgres_data:
  minio_data:
